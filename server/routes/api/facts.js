//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////// ---dÃ©pendense---  /////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

require('dotenv').config();

const express = require('express');
const mongodb = require('mongodb');

const router = express.Router();


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////// --- call api url / routing ---  ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////// --- functions ---  ///////////////////////////////////////////////
async function loadFactsCollection() { 
  const client = await mongodb.MongoClient.connect(process.env.MONGO_URL, {useNewUrlParser: true});
  return client.db('vue_express').collection('facts')
}

////////////////////////////////////////////////// --- call api ---  ///////////////////////////////////////////////

// Get Facts

router.get('/', async (req, res)=>{
  const facts = await loadFactsCollection();
  res.send(await facts.find({}).toArray());
});

// Add Facts
router.post('/', async (req, res)=>{
  const facts = await loadFactsCollection();
  await facts.insertOne({
    name : req.body.name,
  });
  res.status(201).send();
})

// Delete Facts

router.delete('/:id', async (req, res)=>{
  const facts = await loadFactsCollection();
  await facts.deleteOne({_id: new mongodb.ObjectID(req.params.id)});
  res.status(200).send();
})



module.exports = router;


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////